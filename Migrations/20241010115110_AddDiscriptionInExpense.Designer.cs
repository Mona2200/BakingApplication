// <auto-generated />
using System;
using BakingApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BakingApplication.Migrations
{
    [DbContext(typeof(BakingApplicationContext))]
    [Migration("20241010115110_AddDiscriptionInExpense")]
    partial class AddDiscriptionInExpense
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BakingApplication.Data.Enitties.Baking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasPicture")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("BLOB");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bakings");
                });

            modelBuilder.Entity("BakingApplication.Data.Enitties.BakingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BakingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BakingId");

                    b.HasIndex("OrderId");

                    b.ToTable("BakingOrders");
                });

            modelBuilder.Entity("BakingApplication.Data.Enitties.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BakingApplication.Data.Enitties.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("BakingApplication.Data.Enitties.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BakingOrder", b =>
                {
                    b.Property<int>("BakingsTableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdersTableId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BakingsTableId", "OrdersTableId");

                    b.HasIndex("OrdersTableId");

                    b.ToTable("BakingOrder");
                });

            modelBuilder.Entity("BakingApplication.Data.Enitties.BakingOrder", b =>
                {
                    b.HasOne("BakingApplication.Data.Enitties.Baking", "BakingTable")
                        .WithMany()
                        .HasForeignKey("BakingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BakingApplication.Data.Enitties.Order", "OrderTable")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BakingTable");

                    b.Navigation("OrderTable");
                });

            modelBuilder.Entity("BakingOrder", b =>
                {
                    b.HasOne("BakingApplication.Data.Enitties.Baking", null)
                        .WithMany()
                        .HasForeignKey("BakingsTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BakingApplication.Data.Enitties.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
